<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.com.qz.mapper.RongMapper" >
  <resultMap id="BaseResultMap" type="cn.com.qz.pojo.Rong" >
    <id column="rid" property="rid" jdbcType="BIGINT" />
    <result column="userid" property="userid" jdbcType="BIGINT" />
    <result column="content" property="content" jdbcType="VARCHAR" />
    <result column="followUserId" property="followUserId" jdbcType="BIGINT" />
    <result column="statue" property="statue" jdbcType="INTEGER" />
    <result column="followstatue" property="followstatue" jdbcType="INTEGER" />
    <result column="create_time" property="create_time" jdbcType="TIMESTAMP" />
    <result column="update_time" property="update_time" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    rid, userid, content, followUserId, statue, followstatue, create_time, update_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.com.qz.pojo.RongExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from rong
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from rong
    where rid = #{rid,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from rong
    where rid = #{rid,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="cn.com.qz.pojo.RongExample" >
    delete from rong
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.com.qz.pojo.Rong" >
    insert into rong (rid, userid, content, 
      followUserId, statue, followstatue, 
      create_time, update_time)
    values (#{rid,jdbcType=BIGINT}, #{userid,jdbcType=BIGINT}, #{content,jdbcType=VARCHAR}, 
      #{followUserId,jdbcType=BIGINT}, #{statue,jdbcType=INTEGER}, #{followstatue,jdbcType=INTEGER}, 
      #{create_time,jdbcType=TIMESTAMP}, #{update_time,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="cn.com.qz.pojo.Rong" >
    insert into rong
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="rid != null" >
        rid,
      </if>
      <if test="userid != null" >
        userid,
      </if>
      <if test="content != null" >
        content,
      </if>
      <if test="followUserId != null" >
        followUserId,
      </if>
      <if test="statue != null" >
        statue,
      </if>
      <if test="followstatue != null" >
        followstatue,
      </if>
      <if test="create_time != null" >
        create_time,
      </if>
      <if test="update_time != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="rid != null" >
        #{rid,jdbcType=BIGINT},
      </if>
      <if test="userid != null" >
        #{userid,jdbcType=BIGINT},
      </if>
      <if test="content != null" >
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="followUserId != null" >
        #{followUserId,jdbcType=BIGINT},
      </if>
      <if test="statue != null" >
        #{statue,jdbcType=INTEGER},
      </if>
      <if test="followstatue != null" >
        #{followstatue,jdbcType=INTEGER},
      </if>
      <if test="create_time != null" >
        #{create_time,jdbcType=TIMESTAMP},
      </if>
      <if test="update_time != null" >
        #{update_time,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.com.qz.pojo.RongExample" resultType="java.lang.Integer" >
    select count(*) from rong
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update rong
    <set >
      <if test="record.rid != null" >
        rid = #{record.rid,jdbcType=BIGINT},
      </if>
      <if test="record.userid != null" >
        userid = #{record.userid,jdbcType=BIGINT},
      </if>
      <if test="record.content != null" >
        content = #{record.content,jdbcType=VARCHAR},
      </if>
      <if test="record.followUserId != null" >
        followUserId = #{record.followUserId,jdbcType=BIGINT},
      </if>
      <if test="record.statue != null" >
        statue = #{record.statue,jdbcType=INTEGER},
      </if>
      <if test="record.followstatue != null" >
        followstatue = #{record.followstatue,jdbcType=INTEGER},
      </if>
      <if test="record.create_time != null" >
        create_time = #{record.create_time,jdbcType=TIMESTAMP},
      </if>
      <if test="record.update_time != null" >
        update_time = #{record.update_time,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update rong
    set rid = #{record.rid,jdbcType=BIGINT},
      userid = #{record.userid,jdbcType=BIGINT},
      content = #{record.content,jdbcType=VARCHAR},
      followUserId = #{record.followUserId,jdbcType=BIGINT},
      statue = #{record.statue,jdbcType=INTEGER},
      followstatue = #{record.followstatue,jdbcType=INTEGER},
      create_time = #{record.create_time,jdbcType=TIMESTAMP},
      update_time = #{record.update_time,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.com.qz.pojo.Rong" >
    update rong
    <set >
      <if test="userid != null" >
        userid = #{userid,jdbcType=BIGINT},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="followUserId != null" >
        followUserId = #{followUserId,jdbcType=BIGINT},
      </if>
      <if test="statue != null" >
        statue = #{statue,jdbcType=INTEGER},
      </if>
      <if test="followstatue != null" >
        followstatue = #{followstatue,jdbcType=INTEGER},
      </if>
      <if test="create_time != null" >
        create_time = #{create_time,jdbcType=TIMESTAMP},
      </if>
      <if test="update_time != null" >
        update_time = #{update_time,jdbcType=TIMESTAMP},
      </if>
    </set>
    where rid = #{rid,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.com.qz.pojo.Rong" >
    update rong
    set userid = #{userid,jdbcType=BIGINT},
      content = #{content,jdbcType=VARCHAR},
      followUserId = #{followUserId,jdbcType=BIGINT},
      statue = #{statue,jdbcType=INTEGER},
      followstatue = #{followstatue,jdbcType=INTEGER},
      create_time = #{create_time,jdbcType=TIMESTAMP},
      update_time = #{update_time,jdbcType=TIMESTAMP}
    where rid = #{rid,jdbcType=BIGINT}
  </update>
  
  
  	<!--查询谁联系了我的列表 -->
	<select id="selectbetouch" parameterType="long" resultType="cn.com.qz.pojo.Rong">
			SELECT rong.rid,
			rong.followstatue,
			IFNULL(`profile`.avatar,ronggroup.picture) avatar,
			rong.followUserId,
			IFNULL(`profile`.user_name,ronggroup.`name`)user_name ,
			rong.update_time
			FROM
			rong
			LEFT JOIN `profile` ON rong.followUserId = `profile`.user_id and rong.followstatue ='1'
			LEFT JOIN ronggroup on rong.followUserId = ronggroup.groupid and rong.followstatue='4'
			WHERE
			rong.userid = #{userid} and rong.statue='1'
			order by rong.update_time desc
	</select>
	
	
	<!--查询谁联系了我的列表 -->
	<select id="getgrouplist"  resultType="cn.com.qz.pojo.Ronggroup" parameterType="cn.com.qz.queryvo.TribeVo">
		SELECT * from ronggroup ORDER BY ronggroup.update_time desc
		
		<if test="pagequery !=null ">
			limit #{pagequery.pagestart} , #{pagequery.pagesize}
		</if>
	</select>
	<!--查询谁联系了我的列表 -->
	<select id="getgrouplistcount"  resultType="integer" parameterType="cn.com.qz.queryvo.TribeVo">
		SELECT count(1) from ronggroup
	</select>
	
	<!--我加入的群 -->
	<select id="mygroup"  resultType="cn.com.qz.queryvo.RongCustomer" parameterType="long">
				SELECT rongconn.update_time , ronggroup.groupid,ronggroup.userid,
				ronggroup.`name` ,ronggroup.picture
		 from rongconn LEFT JOIN ronggroup on rongconn.groupid = ronggroup.groupid
			where rongconn.userid = #{userid} and  rongconn.state  in (1 ,3 )
		ORDER BY rongconn.update_time desc 
	</select>
	
	
	<!-- 有兴趣的群 -->
	<select id="enjorygroup" resultType="cn.com.qz.queryvo.RongCustomer" parameterType="cn.com.qz.queryvo.TribeVo" >
			SELECT  ronggroup.groupid ,ronggroup.picture,
			ronggroup.`name`,g.tcount,ronggroup.userid,ronggroup.update_time
			from ronggroup
		JOIN (SELECT count(1) tcount,rongconn.groupid ,rongconn.userid from rongconn GROUP BY rongconn.groupid) g 
		on ronggroup.groupid = g.groupid
		where 1=1 and ronggroup.groupid 
		not in (SELECT rongconn.groupid from rongconn where userid =#{userid} and state in (1,3))
		ORDER BY ronggroup.update_time desc ,ronggroup.tribetypeid desc 
		<if test="pagequery !=null ">
			limit #{pagequery.pagestart} , #{pagequery.pagesize}
		</if>
	</select>
	
	<!-- 有兴趣的群 -->
	<select id="enjorygroupcount" resultType="integer" parameterType="cn.com.qz.queryvo.TribeVo" >
			SELECT count(1)
			from ronggroup
		where 1=1 and ronggroup.groupid not in (SELECT rongconn.groupid from rongconn where userid =#{userid})
		ORDER BY ronggroup.update_time desc ,ronggroup.tribetypeid desc 
	</select>
	
	<!-- 群详情 -->
	<select id="groupdetail" resultType="cn.com.qz.queryvo.RongCustomer" parameterType="long" >
				SELECT ronggroup.groupid,ronggroup.`name`,ronggroup.picture,tribetype.typename
		,detaileaddress.detailes , IFNULL(g.tcount,1)tcount,IFNULL(ronggroup.description,'无')description
		,	ronggroup.userid ,detaileaddress.latitude ,detaileaddress.longitude
		from 
		ronggroup LEFT JOIN tribetype on ronggroup.tribetypeid = tribetype.tribetypeid
		LEFT JOIN detaileaddress on ronggroup.detailid = detaileaddress.detailid
		LEFT JOIN (SELECT count(1) tcount,rongconn.groupid ,rongconn.userid from rongconn GROUP BY rongconn.groupid)g
		on g.groupid = ronggroup.groupid
	where ronggroup.groupid =#{groupid}
	</select>
	
	<!-- 明星群主 -->
	<select id="hortuser" resultType="cn.com.qz.queryvo.UserCustomer" parameterType="cn.com.qz.queryvo.TribeVo" >
					SELECT  ronggroup.userid ,browse.bcount ,`profile`.user_name,`profile`.avatar ,g.tcount
		  from ronggroup LEFT JOIN `profile` on ronggroup.userid = `profile`.user_id
			INNER JOIN (SELECT SUM(bcount)bcount ,userid from browse GROUP BY browse.userid)browse 	on ronggroup.userid = browse.userid
			INNER JOIN (SELECT COUNT(1)tcount, userid from ronggroup GROUP BY ronggroup.userid) g on g.userid = ronggroup.userid
			and ronggroup.groupid not in (SELECT ronggroup.groupid  from   ronggroup
			inner JOIN fans on ronggroup.userid = fans.userId
		where fanStatus ='1' and followUserId = #{userid})
		group by ronggroup.userid
		ORDER BY browse.bcount desc, g.tcount desc
		<if test="pagequery !=null ">
			limit #{pagequery.pagestart} ,#{pagequery.pagesize}
		</if>
	</select>
	
	<!-- 明星群主 -->
	<select id="hortusercount" resultType="integer" parameterType="long" >
					SELECT count(1)
		  from ronggroup LEFT JOIN `profile` on ronggroup.userid = `profile`.user_id
			INNER JOIN (SELECT SUM(bcount)bcount ,userid from browse GROUP BY browse.userid)browse 	on ronggroup.userid = browse.userid
			INNER JOIN (SELECT COUNT(1)tcount, userid from ronggroup GROUP BY ronggroup.userid) g on g.userid = ronggroup.userid
			and ronggroup.groupid not in (SELECT ronggroup.groupid  from   ronggroup
			inner JOIN fans on ronggroup.userid = fans.userId
		where fanStatus ='1' and followUserId = #{userid})
		ORDER BY browse.bcount desc, g.tcount desc
	</select>
	
	
	<!-- 人气群 -->
	<select id="hortgroup" resultType="cn.com.qz.queryvo.RongCustomer" parameterType="cn.com.qz.queryvo.TribeVo" >
				SELECT IFNULL(g.tcount,0)tcount, ronggroup.picture  ,ronggroup.groupid ,ronggroup.`name` ,IFNULL(ronggroup.description,'无')description
			from ronggroup INNER JOIN
	(SELECT COUNT(1)tcount  , groupid FROM rongconn GROUP BY rongconn.groupid)g on ronggroup.groupid = g.groupid
	and ronggroup.groupid not in (SELECT groupid from rongconn where rongconn.userid =#{userid} and state in (1,3))
		ORDER BY g.tcount desc 
		<if test="pagequery !=null ">
			limit #{pagequery.pagestart} ,#{pagequery.pagesize}
		</if>
	</select>
	
	<!-- 人气群 -->
	<select id="hortgroupcount" resultType="integer" parameterType="cn.com.qz.queryvo.TribeVo" >
				SELECT count(1)
			from ronggroup INNER JOIN
			(SELECT COUNT(1)bcount  , groupid FROM rongconn GROUP BY rongconn.groupid)g on ronggroup.groupid = g.groupid
			and ronggroup.groupid not in (SELECT groupid from rongconn where rongconn.userid =#{userid} and state in (1,3))
	</select>
	
	
	
	<!-- 群成员 -->
	<select id="groupuser" resultType="cn.com.qz.queryvo.RongCustomer" parameterType="long" >
		SELECT `profile`.avatar , `profile`.user_id userid , `profile`.user_name,
		rongconn.update_time ,rongconn.state
	 	 from rongconn 
		INNER JOIN `profile` on rongconn.userid = `profile`.user_id 
		and rongconn.state in (1,3) and rongconn.groupid =  #{groupid}
		ORDER BY rongconn.state desc  ,rongconn.update_time desc 
	</select>
	
	
	<!-- 退出 -->
	<select id="quit" parameterType="string" >
		UPDATE rongconn set state = '2' where userid = #{userid} and groupid =  #{groupid}
	</select>
	
	
	<!-- 退出 -->
	<select id="qutirong" parameterType="string" >
		UPDATE rong set statue = '2' 
		where userid = #{userid}  and followUserId =#{groupid} and followstatue =4
	</select>
	
	
	<!-- 群tongbu  -->
	<select id="groupsync" parameterType="long" >
		UPDATE rong set rong.statue = '1' where rong.followstatue ='4' and rong.followUserId =#{groupid} 
		and rong.userid in (SELECT userid  from rongconn  where state in (1,3) and groupid = #{groupid})
	</select>
</mapper>